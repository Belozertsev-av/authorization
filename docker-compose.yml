version: '3.8'

services:
  # NestJS приложение
  auth-backend:
    build:
      context: ./auth-backend
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - auth-redis
      - auth-postgres
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=auth-postgres
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - REDIS_HOST=auth-redis
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - app-network

  # Redis
  auth-redis:
    image: redis:7.4.2
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning

  # PostgreSQL
  auth-postgres:
    image: postgres:17.4
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

# Сети
networks:
  app-network:
    driver: bridge

# Тома для хранения данных PostgreSQL
volumes:
  postgres-data:
  redis_data: